{"version":3,"file":"static/js/193.24aa7845.chunk.js","mappings":"6PAIIA,EAA6B,SAACC,GAAK,MAAM,CACzCC,OAAQD,EAAME,KAAKD,OACtB,E,UCLD,EAA0B,yBAA1B,EAAmE,+BAAnE,EAA2G,wBAA3G,EAA4I,wBAA5I,EAA+K,0BAA/K,EAAmN,yBAAnN,EAAkQ,qCAAlQ,EAAyV,4B,UCGnVE,EAAY,SAAH,GAAa,SAARC,SAAsB,UAAMC,GAAkB,EAAG,EAUrE,EARmB,SAACC,GAChB,OACE,gBAAKC,UAAWF,EAAc,UAC5B,SAAC,KAAO,CAACG,GAAIF,EAAMG,GAAIF,UAAWJ,EAAU,SAAEG,EAAMI,QAG5D,ECHA,EANgB,SAACJ,GACb,OACI,gBAAKC,UAAWF,EAAe,SAAEC,EAAMK,SAE/C,E,uCCDMC,GAAeC,EAAAA,EAAAA,IAAiB,KAetC,GAAeC,EAAAA,EAAAA,GAAU,CAACC,KAAM,2BAAhC,EAbuB,SAACT,GAGpB,OACE,iBAAMU,SAAUV,EAAMW,aAAa,UACjC,iBAAKV,UAAWF,EAA2B,WACzC,SAACa,EAAA,EAAK,CAACC,UAAWC,EAAAA,GAAUV,KAAK,iBAAiBW,YAAY,qBAAqBC,SAAU,CAACC,EAAAA,GAAUX,MACxG,mBAAQL,UAAWF,EAAkB,sBAI7C,ICgBF,EA3BgB,SAACC,GAEjB,IAAMkB,EAAiBlB,EAAMmB,YAAYC,YAAYC,KAAI,SAACC,GAAE,OAAK,SAAC,EAAU,CAAClB,KAAI,UAAKkB,EAAGlB,MAAQD,GAAE,UAAKmB,EAAGnB,KAAK,UAASmB,EAAGnB,IAAO,IAG3HoB,EAAmBvB,EAAMmB,YAAYK,aAAaH,KAAI,SAAAC,GAAE,OAAI,SAAC,EAAO,CAACjB,QAASiB,EAAGjB,QAASF,GAAImB,EAAGnB,IAASmB,EAAGnB,GAAK,IAMxH,OAAKH,EAAML,QAMT,iBAAKM,UAAWF,EAAe,WAC7B,gBAAKE,UAAWF,EAAqB,SAAEmB,KACvC,gBAAKjB,UAAWF,EAAgB,SAC7BwB,KAEH,SAAC,EAAc,CAACb,SAfE,SAACe,GACrBzB,EAAM0B,YAAYD,EAAOE,eAC3B,QAGS,SAAC,KAAQ,CAACzB,GAAG,WAaxB,ECOA,GAAe0B,EAAAA,EAAAA,KACbC,EAAAA,EAAAA,KAfqB,SAACnC,GACtB,MAAO,CACLyB,YAAazB,EAAMyB,YAEvB,IAE2B,SAACW,GAC1B,MAAM,CACJJ,YAAa,SAACC,GACZG,GAASC,EAAAA,EAAAA,IAAyBJ,GACpC,EAEJ,KN9BgC,SAACK,GAAe,IACtCC,EAAiB,qGAKlB,OALkB,8BACnB,WACI,OAAIC,KAAKlC,MAAML,QAER,SAACqC,GAAS,UAAKE,KAAKlC,SAFG,SAAC,KAAQ,CAACE,GAAG,WAG/C,KAAC,EALkB,CAASiC,EAAAA,WAShC,OAFqCN,EAAAA,EAAAA,IAAQpC,EAARoC,CAAoCI,EAG7E,GMqBA,CAGGG,E","sources":["hoc/withAuthRedirect.js","webpack://react-k-1/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Navigate to=\"/login/\" />\r\n            \r\n            return <Component {...this.props}/>\r\n        };        \r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__3KcRK\",\"dialogs_items\":\"Dialogs_dialogs_items__7WG+2\",\"dialog\":\"Dialogs_dialog__vKEEi\",\"active\":\"Dialogs_active__17QLC\",\"messages\":\"Dialogs_messages__qA1xI\",\"message\":\"Dialogs_message__0mWVB\",\"textInput_container\":\"Dialogs_textInput_container__mKdGs\",\"textArea\":\"Dialogs_textArea__A6UI7\",\"buttonSend\":\"Dialogs_buttonSend__eyklR\"};","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styles from \"./../Dialogs.module.css\"\r\n\r\nconst setActive = ({isActive}) => isActive ? `${styles.active}` : '';\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n      <div className={styles.dialog} >\r\n        <NavLink to={props.id} className={setActive}>{props.name}</NavLink>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport styles from \"./../Dialogs.module.css\"\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={styles.message}>{props.message}</div>\r\n    );\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"../../common/FormsControls/FormControls\";\r\nimport { maxLengthCreator, required } from \"../../../utils/validators/validators\";\r\nimport styles from \"./../Dialogs.module.css\";\r\n\r\nconst maxLength100 = maxLengthCreator(100);\r\n\r\nconst AddMessageForm = (props) => {\r\n    \r\n\r\n    return (\r\n      <form onSubmit={props.handleSubmit}>\r\n        <div className={styles.textInput_container}>\r\n          <Field component={Textarea} name=\"newMessageBody\" placeholder=\"Enter your message\" validate={[required, maxLength100]}/>\r\n          <button className={styles.buttonSend}>Send</button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n\r\nexport default reduxForm({form: 'dialog-add-message-form'})(AddMessageForm);","import React from \"react\";\r\nimport styles from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n// import { sendMessageActionCreator, updateNewMessageTextActionCreator } from \"../../redux/dialogsReduser\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\nconst dialogsElement = props.dialogsPage.dialogsData.map((el) => <DialogItem name={`${el.name}`} id={`${el.id}`} key={`${el.id}`}/>\r\n  );\r\n\r\n  const messagesElements = props.dialogsPage.messagesData.map(el => <Message message={el.message} id={el.id} key={el.id}/>);\r\n\r\n  const addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessageBody);\r\n  }\r\n\r\n  if (!props.isAuth) {\r\n    return <Navigate to='/login/' />\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={styles.dialogs}>\r\n      <div className={styles.dialogs_items}>{dialogsElement}</div>\r\n      <div className={styles.messages}>\r\n        {messagesElements}\r\n      </div>\r\n      <AddMessageForm onSubmit={addNewMessage}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialogs;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { sendMessageActionCreator} from \"../../redux/dialogsReduser\";\r\nimport Dialogs from \"./Dialogs\";\r\n\r\n// const DialogsContainer = (props) => {\r\n\r\n//   const onSendMessage = () => {\r\n//     const action = sendMessageActionCreator();\r\n//     props.store.dispatch(action);\r\n//   }\r\n\r\n//   const onMessageChange = (text) => {\r\n//     const action = updateNewMessageTextActionCreator(text);\r\n//     props.store.dispatch(action);\r\n//   };\r\n\r\n\r\n//   return (\r\n//     <Dialogs updateNewMessageText={onMessageChange} sendMessage={onSendMessage} dialogsPage={props.store.getState().dialogsPage}/>\r\n//   );\r\n// };\r\n\r\n\r\nconst mapStateToProps= (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return{\r\n    sendMessage: (newMessageBody) => {\r\n      dispatch(sendMessageActionCreator(newMessageBody))\r\n    }\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect (mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect)\r\n  (Dialogs)\r\n"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","setActive","isActive","styles","props","className","to","id","name","message","maxLength100","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","dialogsElement","dialogsPage","dialogsData","map","el","messagesElements","messagesData","values","sendMessage","newMessageBody","compose","connect","dispatch","sendMessageActionCreator","Component","RedirectComponent","this","React","Dialogs"],"sourceRoot":""}